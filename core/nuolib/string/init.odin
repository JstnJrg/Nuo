package String


init :: proc(cid: int)
{
	register_operators()
	b_methods(cid)
}


b_methods :: proc(cid: int)
{
	B_METHOD(cid,"length",length,.INTRINSICS)
	B_METHOD(cid,"repeat",repeat,.INTRINSICS)
	B_METHOD(cid,"count",count,.INTRINSICS)
	B_METHOD(cid,"join",join,.INTRINSICS)

	B_METHOD(cid,"equaln",equaln,.INTRINSICS)
	B_METHOD(cid,"prefix_length_commom",prefix_length_commom,.INTRINSICS)
	B_METHOD(cid,"has_prefix",has_prefix,.INTRINSICS)
	B_METHOD(cid,"has_suffix",has_suffix,.INTRINSICS)

	B_METHOD(cid,"reverse",reverse,.INTRINSICS)
	B_METHOD(cid,"center_justify",center_justify,.INTRINSICS)
	B_METHOD(cid,"right_justify",right_justify,.INTRINSICS)
	B_METHOD(cid,"left_justify",left_justify,.INTRINSICS)

	B_METHOD(cid,"cut",cut,.INTRINSICS)
	B_METHOD(cid,"substring",substring,.INTRINSICS)
	B_METHOD(cid,"substring_from",substring_from,.INTRINSICS)
	B_METHOD(cid,"substring_to",substring_to,.INTRINSICS)

	B_METHOD(cid,"expand_tabs",expand_tabs,.INTRINSICS)
	B_METHOD(cid,"trim_suffix",trim_suffix,.INTRINSICS)
	B_METHOD(cid,"trim_prefix",trim_prefix,.INTRINSICS)
	B_METHOD(cid,"trim",trim,.INTRINSICS)

	B_METHOD(cid,"compare",compare,.INTRINSICS)
	// B_METHOD(cid,"",)B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"contains",contains)
	
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"",)
	// B_METHOD(cid,"shuffle",shuffle)	
	// B_METHOD(cid,"clear",_clear)
	// B_METHOD(cid,"resize",resize_)
	// B_METHOD(cid,"choice",choice)
	// B_METHOD(cid,"append",append_)
	// B_METHOD(cid,"append_array",append_array)
	// B_METHOD(cid,"pop_back",pop_back)
	// B_METHOD(cid,"pop_front",pop_front)
	// B_METHOD(cid,"qsort",qsort)
	// B_METHOD(cid,"ssort",ssort)
	// B_METHOD(cid,"count",count)
	// B_METHOD(cid,"reverse",reverse)
	// B_METHOD(cid,"has",has)
	// B_METHOD(cid,"fill",fill)
	// B_METHOD(cid,"find",find)
}